// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CalculadoraWindowsCUIT
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Opens the micrsofot windows notepad
        /// </summary>
        public void openNotepad()
        {

            // Launch '%windir%\System32\notepad.exe'
            ApplicationUnderTest notepadApplication = ApplicationUnderTest.Launch(this.openNotepadParams.ExePath, this.openNotepadParams.AlternateExePath);
        }
        
        /// <summary>
        /// Writes something in the notepad
        /// </summary>
        public void writeInNotepad()
        {
            #region Variable Declarations
            WinEdit campoDeTexto = this.BlocoDeNotas.Janela.CampoDeTexto;
            #endregion

            // Type 'teste teste teste' in text box
            campoDeTexto.Text = this.writeInNotepadParams.CampoDeTextoText;
        }
        
        /// <summary>
        /// Saves the file with the name "Nome"
        /// </summary>
        public void saveFile()
        {
            #region Variable Declarations
            WinMenuItem menuSalvar = this.BlocoDeNotas.BarraDeMenu.MenuArquivo.MenuSalvar;
            WinComboBox txtNomeDoArquivo = this.JanelaSalvar.PainelDeDetalhes.txtNomeDoArquivo;
            WinButton botaoSalvar = this.JanelaSalvar.UISalvarWindow.BotaoSalvar;
            #endregion

            // Click 'Arquivo' -> 'Salvar Ctrl+S' menu item
            Mouse.Click(menuSalvar, new Point(61, 10));

            // Select 'Nome' in 'Nome:' combo box
            txtNomeDoArquivo.EditableItem = this.saveFileParams.txtNomeDoArquivoEditableItem;

            // Click 'Sa&lvar' button
            Mouse.Click(botaoSalvar, new Point(47, 9));
        }
        
        /// <summary>
        /// verificaNomeNaBarraDeTitulo - Use 'verificaNomeNaBarraDeTituloExpectedValues' to pass parameters into this method.
        /// </summary>
        public void verificaNomeNaBarraDeTitulo()
        {
            #region Variable Declarations
            WinTitleBar barraDeTitulos = this.BlocoDeNotas.BarraDeTitulos;
            #endregion

            // Verify that the 'DisplayText' property of 'Nome - Bloco de notas' title bar contains 'Nome'
            StringAssert.Contains(barraDeTitulos.DisplayText, this.verificaNomeNaBarraDeTituloExpectedValues.BarraDeTitulosDisplayText);
        }
        
        #region Properties
        public virtual openNotepadParams openNotepadParams
        {
            get
            {
                if ((this.mopenNotepadParams == null))
                {
                    this.mopenNotepadParams = new openNotepadParams();
                }
                return this.mopenNotepadParams;
            }
        }
        
        public virtual writeInNotepadParams writeInNotepadParams
        {
            get
            {
                if ((this.mwriteInNotepadParams == null))
                {
                    this.mwriteInNotepadParams = new writeInNotepadParams();
                }
                return this.mwriteInNotepadParams;
            }
        }
        
        public virtual saveFileParams saveFileParams
        {
            get
            {
                if ((this.msaveFileParams == null))
                {
                    this.msaveFileParams = new saveFileParams();
                }
                return this.msaveFileParams;
            }
        }
        
        public virtual verificaNomeNaBarraDeTituloExpectedValues verificaNomeNaBarraDeTituloExpectedValues
        {
            get
            {
                if ((this.mverificaNomeNaBarraDeTituloExpectedValues == null))
                {
                    this.mverificaNomeNaBarraDeTituloExpectedValues = new verificaNomeNaBarraDeTituloExpectedValues();
                }
                return this.mverificaNomeNaBarraDeTituloExpectedValues;
            }
        }
        
        public BlocoDeNotas BlocoDeNotas
        {
            get
            {
                if ((this.mBlocoDeNotas == null))
                {
                    this.mBlocoDeNotas = new BlocoDeNotas();
                }
                return this.mBlocoDeNotas;
            }
        }
        
        public JanelaSalvar JanelaSalvar
        {
            get
            {
                if ((this.mJanelaSalvar == null))
                {
                    this.mJanelaSalvar = new JanelaSalvar();
                }
                return this.mJanelaSalvar;
            }
        }
        #endregion
        
        #region Fields
        private openNotepadParams mopenNotepadParams;
        
        private writeInNotepadParams mwriteInNotepadParams;
        
        private saveFileParams msaveFileParams;
        
        private verificaNomeNaBarraDeTituloExpectedValues mverificaNomeNaBarraDeTituloExpectedValues;
        
        private BlocoDeNotas mBlocoDeNotas;
        
        private JanelaSalvar mJanelaSalvar;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'openNotepad'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class openNotepadParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%windir%\System32\notepad.exe'
        /// </summary>
        public string ExePath = "C:\\Windows\\System32\\notepad.exe";
        
        /// <summary>
        /// Launch '%windir%\System32\notepad.exe'
        /// </summary>
        public string AlternateExePath = "%windir%\\System32\\notepad.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'writeInNotepad'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class writeInNotepadParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'teste teste teste' in text box
        /// </summary>
        public string CampoDeTextoText = "teste teste teste";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'saveFile'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class saveFileParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Nome' in 'Nome:' combo box
        /// </summary>
        public string txtNomeDoArquivoEditableItem = "Nome";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'verificaNomeNaBarraDeTitulo'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class verificaNomeNaBarraDeTituloExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Nome - Bloco de notas' title bar contains 'Nome'
        /// </summary>
        public string BarraDeTitulosDisplayText = "Nome";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class BlocoDeNotas : WinWindow
    {
        
        public BlocoDeNotas()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Sem título - Bloco de notas";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Notepad";
            this.WindowTitles.Add("Sem título - Bloco de notas");
            this.WindowTitles.Add("Nome - Bloco de notas");
            #endregion
        }
        
        #region Properties
        public Janela Janela
        {
            get
            {
                if ((this.mJanela == null))
                {
                    this.mJanela = new Janela(this);
                }
                return this.mJanela;
            }
        }
        
        public BarraDeMenu BarraDeMenu
        {
            get
            {
                if ((this.mBarraDeMenu == null))
                {
                    this.mBarraDeMenu = new BarraDeMenu(this);
                }
                return this.mBarraDeMenu;
            }
        }
        
        public WinTitleBar BarraDeTitulos
        {
            get
            {
                if ((this.mBarraDeTitulos == null))
                {
                    this.mBarraDeTitulos = new WinTitleBar(this);
                    #region Search Criteria
                    this.mBarraDeTitulos.WindowTitles.Add("Nome - Bloco de notas");
                    #endregion
                }
                return this.mBarraDeTitulos;
            }
        }
        #endregion
        
        #region Fields
        private Janela mJanela;
        
        private BarraDeMenu mBarraDeMenu;
        
        private WinTitleBar mBarraDeTitulos;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class Janela : WinWindow
    {
        
        public Janela(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "15";
            this.WindowTitles.Add("Sem título - Bloco de notas");
            #endregion
        }
        
        #region Properties
        public WinEdit CampoDeTexto
        {
            get
            {
                if ((this.mCampoDeTexto == null))
                {
                    this.mCampoDeTexto = new WinEdit(this);
                    #region Search Criteria
                    this.mCampoDeTexto.WindowTitles.Add("Sem título - Bloco de notas");
                    #endregion
                }
                return this.mCampoDeTexto;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mCampoDeTexto;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class BarraDeMenu : WinMenuBar
    {
        
        public BarraDeMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Aplicativo";
            this.WindowTitles.Add("Sem título - Bloco de notas");
            #endregion
        }
        
        #region Properties
        public MenuArquivo MenuArquivo
        {
            get
            {
                if ((this.mMenuArquivo == null))
                {
                    this.mMenuArquivo = new MenuArquivo(this);
                }
                return this.mMenuArquivo;
            }
        }
        #endregion
        
        #region Fields
        private MenuArquivo mMenuArquivo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class MenuArquivo : WinMenuItem
    {
        
        public MenuArquivo(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenuItem.PropertyNames.Name] = "Arquivo";
            this.WindowTitles.Add("Sem título - Bloco de notas");
            #endregion
        }
        
        #region Properties
        public WinMenuItem MenuSalvar
        {
            get
            {
                if ((this.mMenuSalvar == null))
                {
                    this.mMenuSalvar = new WinMenuItem(this);
                    #region Search Criteria
                    this.mMenuSalvar.SearchProperties[WinMenuItem.PropertyNames.Name] = "Salvar\tCtrl+S";
                    this.mMenuSalvar.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mMenuSalvar.WindowTitles.Add("Sem título - Bloco de notas");
                    #endregion
                }
                return this.mMenuSalvar;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mMenuSalvar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class JanelaSalvar : WinWindow
    {
        
        public JanelaSalvar()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Salvar como";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Salvar como");
            #endregion
        }
        
        #region Properties
        public PainelDeDetalhes PainelDeDetalhes
        {
            get
            {
                if ((this.mPainelDeDetalhes == null))
                {
                    this.mPainelDeDetalhes = new PainelDeDetalhes(this);
                }
                return this.mPainelDeDetalhes;
            }
        }
        
        public UISalvarWindow UISalvarWindow
        {
            get
            {
                if ((this.mUISalvarWindow == null))
                {
                    this.mUISalvarWindow = new UISalvarWindow(this);
                }
                return this.mUISalvarWindow;
            }
        }
        #endregion
        
        #region Fields
        private PainelDeDetalhes mPainelDeDetalhes;
        
        private UISalvarWindow mUISalvarWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class PainelDeDetalhes : WinPane
    {
        
        public PainelDeDetalhes(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Painel de Detalhes";
            this.WindowTitles.Add("Salvar como");
            #endregion
        }
        
        #region Properties
        public WinComboBox txtNomeDoArquivo
        {
            get
            {
                if ((this.mtxtNomeDoArquivo == null))
                {
                    this.mtxtNomeDoArquivo = new WinComboBox(this);
                    #region Search Criteria
                    this.mtxtNomeDoArquivo.SearchProperties[WinComboBox.PropertyNames.Name] = "Nome:";
                    this.mtxtNomeDoArquivo.WindowTitles.Add("Salvar como");
                    #endregion
                }
                return this.mtxtNomeDoArquivo;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mtxtNomeDoArquivo;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UISalvarWindow : WinWindow
    {
        
        public UISalvarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Salvar como");
            #endregion
        }
        
        #region Properties
        public WinButton BotaoSalvar
        {
            get
            {
                if ((this.mBotaoSalvar == null))
                {
                    this.mBotaoSalvar = new WinButton(this);
                    #region Search Criteria
                    this.mBotaoSalvar.SearchProperties[WinButton.PropertyNames.Name] = "Salvar";
                    this.mBotaoSalvar.WindowTitles.Add("Salvar como");
                    #endregion
                }
                return this.mBotaoSalvar;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mBotaoSalvar;
        #endregion
    }
}
